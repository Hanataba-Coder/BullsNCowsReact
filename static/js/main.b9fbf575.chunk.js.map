{"version":3,"sources":["components/Aux/Aux.js","components/Modal/Modal.js","Views/Game/index.js","Views/Menu/index.js","Views/GameHistory/index.js","Views/HowTo/index.js","App/baseStyled.js","App/index.js","serviceWorker.js","index.js"],"names":["aux","props","children","ModalStyle","styled","div","Modal","Aux","style","transform","show","opacity","textAlign","icon","onClick","closeModal","Container","Card","InputStyled","input","ButtonStyled","button","HeaderMenu","span","ReturnStyled","LinkStyled","Link","Game","useState","numberUser","setNumberUser","anwser","setAnswer","setCorrectNumber","correctIndex","setCorrectIndex","messageError","setMessageError","roundNumber","setRoundNumber","userName","setUserName","randomNum","arr","length","r","Math","floor","random","indexOf","push","console","log","useEffect","restartNumber","to","display","width","justifyContent","placeholder","type","maxLength","value","onKeyDown","e","keyCode","preventDefault","onChange","target","correctNum","valuesSoFar","checkDupiclate","numberUserArray","Array","from","map","Number","number","index","aws","awsIndex","prevState","color","disabled","flexDirection","alignItems","height","fontSize","marginTop","marginRight","JSON","parse","localStorage","getItem","gameHistoy","history","name","round","setItem","stringify","marginLeft","Menu","padding","marginBottom","GameHistory","gameHistory","setGameHistory","newLocal","sort","overflow","flex","TextHeader","HowTo","createGlobalStyle","library","add","fas","App","exact","path","component","Howto","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b9fbf575.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlet ModalStyle = styled.div`\n    position: fixed;\n    z-index: 500;\n    background-color: white;\n    width: 50%;\n    height: 50%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    padding: 16px;\n    top: 20%;\n    box-sizing: border-box;\n    transition: all 0.3s ease-out;\n    margin: auto;\n    border-radius: 10px;\n\n    @media (max-width: 600px) {\n        width: 80%;\n    }\n`\n\nconst  Modal = (props) => { \n    \n    return (\n        <Aux>\n            <ModalStyle\n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}\n            >\n                <div\n                    style={{textAlign: 'end'}}\n                >\n                    <FontAwesomeIcon \n                        icon={['fas', 'times']} \n                        onClick={props.closeModal}\n                    />\n                </div>\n                {props.children}\n            </ModalStyle>\n        </Aux>\n    );\n\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react'\nimport Aux from '../../components/Aux/Aux'\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Modal from '../../components/Modal/Modal'\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    // padding-top: 100px;\n\n    & a{\n        text-decoration: none;\n        color: unset;\n    }\n`\n\nconst Card = styled.div`\n    padding: 20px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    border-radius: 10px;\n    width: 50%;\n    text-align: center;\n    font-weight: bold;\n    margin: auto;\n    background-color: #fff;\n\n    @media (max-width: 600px) {\n        width: 80%;\n    }\n`\n\nconst InputStyled = styled.input`\n    display: block;\n    border: 1px solid #E3E3E3;\n    border-radius: 10px;\n    padding: 10px;\n    text-align: center;\n    margin-top: 10px;\n`\n\nconst ErrorMessageStyled = styled.div`\n    color: red;\n`\n\nconst ButtonStyled = styled.button`\n    margin-top: 10px;\n    padding: 10px;\n    width: 100px;\n    text-align: center;\n    background-color: #fff;\n    border: 1px solid;\n    border-radius: 10px;\n`\n\nconst HeaderMenu = styled.span`\n    font-size: 22px;\n    font-weight: bold;\n    margin: 20px 0;\n`\n\nconst ReturnStyled = styled.span`\n    font-size: 40px;\n    font-weight: bold;\n    margin: 20px;\n    cursor: pointer;\n`\n\nconst LinkStyled = styled(Link)`\n    text-decoration: none;\n    color: unset;\n`\n\nconst Game = (props) => {\n    const [numberUser, setNumberUser] = useState('')\n    const [anwser, setAnswer] = useState('')\n    const [correctNumber, setCorrectNumber] = useState(0)\n    const [correctIndex, setCorrectIndex] = useState(0)\n    const [messageError, setMessageError] = useState('กรุณาระบุ 4 ตัวเลขที่ไม่ซ้ำกัน')\n    const [roundNumber, setRoundNumber] = useState(0);\n    const [userName, setUserName] = useState('');\n\n    const checkDupiclate = (arr) => {\n        const valuesSoFar = [];\n        for (const num of arr) {\n          const value = num;\n          if (valuesSoFar.indexOf(value) !== -1) {\n            return true;\n          }\n          valuesSoFar.push(value);\n        }\n        return false;\n    }\n\n    const randomNum = () => {\n        let arr = [];\n        while (arr.length < 4) {\n            const r = Math.floor(Math.random() * 10);\n            if (arr.indexOf(r) === -1) {\n              arr.push(r);\n            }\n        }\n        console.log(arr)\n        setAnswer(arr)\n      }\n\n    useEffect(() => {\n        randomNum()\n    }, []);\n\n    const restartNumber = () => {\n        randomNum()\n        setNumberUser('')\n        setCorrectNumber(0)\n        setCorrectIndex(0)\n        setRoundNumber(0)\n        setMessageError('กรุณาระบุ 4 ตัวเลขที่ไม่ซ้ำกัน')\n    }\n\n    const calculateNum = () => {\n        let correctIndex = 0;\n        let correctNum = 0;\n\n        if(!checkDupiclate(numberUser)){\n            const numberUserArray = Array.from(numberUser).map(Number);\n            numberUserArray.map((number, index) => {\n                    anwser.map((aws, awsIndex) => {\n                        if(number == aws){\n                            correctNum += 1\n                            if(index == awsIndex){\n                                correctIndex += 1\n                            }\n                        }\n                    })\n                }\n            )\n            console.log(anwser)\n            console.log(numberUserArray)\n            setRoundNumber(prevState => prevState + 1)\n            setCorrectIndex(correctIndex)\n            setCorrectNumber(correctNum)\n            setMessageError(\n                <div style={{color: 'red', textAlign: 'center'}} >\n                    ตัวเลขที่ถูกต้อง: {correctNum} ตัว  <br/>\n                    ตำแหน่งตัวเลขที่ถูกต้อง: {correctIndex} ตัว\n                </div>)\n        }else{\n            setMessageError('กรุณาระบุตัวเลขที่ไม่ซ้ำกัน')\n        }\n      }\n\n    const saveHistory = () => {\n        console.log('localStorage: ',JSON.parse(localStorage.getItem(\"gameHistory\")))\n\n        const gameHistoy = JSON.parse(localStorage.getItem(\"gameHistory\")) || []\n\n        const history = {\n            name: userName || 'anonymous',\n            round: roundNumber,\n            index: gameHistoy.length + 1\n        }\n\n        gameHistoy.push(history)\n\n        // console.log(gameHistoy)\n\n        localStorage.setItem(\"gameHistory\", JSON.stringify(gameHistoy));\n\n        restartNumber()\n    }\n\n    return (\n        <div>\n            <LinkStyled to='/menu'>\n                <ReturnStyled>{`<`}</ReturnStyled>\n            </LinkStyled>\n            <Card>\n            <Container>\n                <div\n                    style={{\n                        display: 'flex',\n                        width: '100%',\n                        justifyContent: 'flex-end'\n                    }}\n                >\n                    <span>Round: </span>\n                    <span>{roundNumber}</span>\n                </div>\n                <HeaderMenu>Game</HeaderMenu>\n                <InputStyled\n                    placeholder=\"Enter Number\"\n                    type=\"number\"\n                    maxLength=\"4\"\n                    value={numberUser}\n                    onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\n                    onChange={e => {\n                        setMessageError('กรุณาระบุ 4 ตัวเลขที่ไม่ซ้ำกัน')\n                        if(e.target.value.length < 5){\n                            // if(!checkDupiclate(e.target.value)){\n                                setNumberUser(e.target.value)\n                            // }\n                        }\n                    }}\n                />\n                {\n                    messageError && messageError\n                }\n                <ButtonStyled\n                    onClick={calculateNum}\n                    disabled={numberUser.length !== 4}\n                >\n                    ยืนยัน\n                </ButtonStyled>\n\n                {\n                    correctIndex == 4 &&\n                    <Modal\n                        show={correctIndex == 4}\n                    >\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                height: '100%',\n                                fontSize: '18px'\n                            }}\n                        >\n                            <span>ยินดีด้วย</span>\n                            <span>คำตอบที่ถูกต้องคือ: {anwser}</span>\n                            <span>ท่านใช้ไปทั้งหมด {roundNumber} รอบ</span>   \n                            \n                            <div style={{marginTop: '20px' }}>\n                                กรุณาระบุชื่อของท่าน\n                                <InputStyled \n                                    value={userName}\n                                    onChange={e => setUserName(e.target.value)}\n                                    placeholder=\"กรุณาระบุชื่อ\"\n                                />\n                            </div>\n\n                            <div style={{display: 'flex'}} >\n                                <ButtonStyled\n                                    style={{marginRight: '5px'}}\n                                    onClick={saveHistory}\n                                >\n                                    ยืนยัน\n                                </ButtonStyled>\n                                <ButtonStyled\n                                    style={{marginLeft: '5px'}}\n                                    onClick={restartNumber}\n                                >\n                                    ปิด\n                                </ButtonStyled>\n                            </div>\n                        </div>\n\n                    </Modal>\n                }\n            </Container>\n            </Card>\n        </div>\n    )\n}\n\nexport default Game;","import React from 'react'\nimport Aux from '../../components/Aux/Aux'\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from 'antd';\nimport { Input, Select } from 'antd';\nimport { SettingOutlined } from '@ant-design/icons';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding-top: 100px;\n\n    & a{\n        text-decoration: none;\n        color: unset;\n    }\n\n`\n\nconst Card = styled.div`\n    padding: 20px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    border-radius: 10px;\n    width: auto;\n    text-align: center;\n    font-weight: bold;\n    margin: 10px 0px;\n    background: #fff;\n`\n\nconst HeaderMenu = styled.span`\n    font-size: 30px;\n    font-weight: bold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    color: #fff;\n    margin-bottom: 50px;\n`\n\nconst Menu = (props) => {\n    return (\n        <Container>\n            <Row\n                style={{padding: '20px'}}\n            >\n                <Col span={24}>\n                    <HeaderMenu>\n                        Bulls and Cows\n                    </HeaderMenu>\n                </Col>\n                <Col span={24} >\n                    <Link\n                        to='/game'\n                        style={{\n                            marginBottom: '20px'\n                        }}\n                    >\n                        <Card>\n                            Start\n                        </Card>\n                    </Link>\n                </Col>\n                <Col span={24}>\n                    <Link\n                        to='/howTo'\n                    >\n                            <Card>\n                                How To\n                            </Card>\n                        </Link>\n                </Col>\n                <Col span={24}>\n                    <Link\n                        to='/history'\n                    >\n                            <Card>\n                                History\n                            </Card>\n                        </Link>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Menu;","import React, { useEffect, useState } from 'react'\nimport Aux from '../../components/Aux/Aux'\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst LinkStyled = styled(Link)`\n    text-decoration: none;\n    color: unset;\n`\n\nconst ReturnStyled = styled.span`\n    font-size: 40px;\n    font-weight: bold;\n    margin: 20px;\n    cursor: pointer;\n`\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    overflow: hidden;\n\n    & a{\n        text-decoration: none;\n        color: unset;\n    }\n`\n\nconst Card = styled.div`\n    padding: 20px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    border-radius: 10px;\n    width: 50%;\n    height: 50%;\n    font-weight: bold;\n    margin: 0 auto;\n    display: flex;\n    text-align: center;\n    background: #fff;\n    overflow: auto;\n\n    @media only screen and (max-width: 600px) {\n        width: 80%;\n    }\n`\n\nconst GameHistory = (props) => {\n\n    const [gameHistory, setGameHistory] = useState([])\n\n    useEffect(() => {\n        const localGameHistoy = JSON.parse(localStorage.getItem(\"gameHistory\")) || []\n        const newLocal = localGameHistoy.sort(() => -1)\n        setGameHistory([...newLocal])\n    }, []);\n\n    return (\n        <div style={{overflow: 'hidden', width: '100vw', height: '100vh'}} >\n            <LinkStyled to='/menu'>\n                <ReturnStyled>{`<`}</ReturnStyled>\n            </LinkStyled>\n            <Container>\n                <Card>\n                        <span style={{flex: 1}}>\n                            <span style={{marginBottom: '10px', fontSize: '20px'}}>User</span>\n                            {\n                                gameHistory.length > 0 && gameHistory.map(history => (<div>{history.name}</div>)) \n                            }        \n                        </span>\n                        <span  style={{flex: 1}}>\n                            <span style={{marginBottom: '10px', fontSize: '20px'}}>Round</span>\n                            {\n                                gameHistory.length > 0 && gameHistory.map(history => (<div>{history.round}</div>)) \n                            }        \n                        </span>\n                    \n                </Card>\n            </Container>\n        </div>\n    )\n}\n\nexport default GameHistory;","import React from 'react'\nimport Aux from '../../components/Aux/Aux'\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst LinkStyled = styled(Link)`\n    text-decoration: none;\n    color: unset;\n`\n\nconst ReturnStyled = styled.span`\n    font-size: 40px;\n    font-weight: bold;\n    margin: 20px;\n    cursor: pointer;\n`\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    // padding-top: 100px;\n\n    & a{\n        text-decoration: none;\n        color: unset;\n    }\n`\n\nconst Card = styled.div`\n    padding: 20px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    border-radius: 10px;\n    text-align: center;\n    font-weight: bold;\n    margin: 10px 20px;\n    background: #fff;\n`\n\nconst TextHeader = styled.div`\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n`\n\nconst HowTo = (props) => {\n    return (\n        <Aux>\n            <LinkStyled to='/menu'>\n                <ReturnStyled>{`<`}</ReturnStyled>\n            </LinkStyled>\n            <Container>\n                <Card>\n                    <TextHeader>How To</TextHeader>\n                    <div>\n                        <p style={{fontSize: '18px'}} >\n                            Guess 4 digits number between 0 to 9  in order to match all number in each position of answer \n                            and the digits must be all different \n                        </p>\n                    </div>\n                </Card>\n            </Container>\n        </Aux>\n    )\n}\n\nexport default HowTo;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  html, body, #root {\n    height: 100%;\n    min-height: 100%;\n    font-family: \"Prompt\";\n    background-color: #ff7700;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='%23cc0000' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='%23aa0000' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='%23d6002b' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='%23b10022' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='%23d9004b' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='%23b2003d' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='%23d3006c' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='%23ac0057' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='%23c4008c' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='%239e0071' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='%23aa00aa' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='%23880088' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\");\n    background-attachment: fixed;\n    background-size: cover;\n  }\n\n  body {\n    -webkit-tap-highlight-color: transparent;\n  }\n`;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Game from '../Views/Game'\nimport Menu from '../Views/Menu'\nimport GameHistory from '../Views/GameHistory'\nimport Howto from '../Views/HowTo'\nimport BaseStyled from './baseStyled'\nimport Aux from '../components/Aux/Aux'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fas);\n\nconst App = () => {\n  return(\n    <Aux>\n      <BaseStyled/>\n      <Switch>\n        <Route exact path=\"/menu\" component={Menu} />\n        <Route exact path=\"/game\" component={Game} />\n        <Route exact path=\"/Howto\" component={Howto} />\n        <Route exact path=\"/history\" component={GameHistory} />\n        <Redirect to=\"/menu\" />\n      </Switch>\n    </Aux>\n    )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}